/**
 * yet another binding for i18next
 * it's so damn hard to get react-18next work in next
 *
 * - required
 */
import { FunctionComponent } from 'react';
import { i18n, TFunction } from 'i18next';
export interface I18NFactory {
    /**
     * @param {boolean} inServer
     * @param {string} initialLang
     * @returns {i18n} initialized (and resource-loaded when inServer is true) i18n instance
     */
    (inServer: boolean, initialLang?: string): i18n;
}
/**
 * A HOC to hold i18n instance InternalI18nState
 * @param {string|undefined} props.lang
 * @param {I18NFactory} props.factory see {@link I18NFactory}
 */
export declare const I18NextReactProvider: FunctionComponent<{
    lang?: string;
    factory: I18NFactory;
}>;
export declare function useI18n(): i18n;
/**
 * like {@link useI18n}, but return null when resource bundle not available
 * @param {string} lng
 * @param {string} ns
 * @returns {i18n | null}
 */
export declare function useI18nLoaded(lng?: string, ns?: string): TFunction | null;
export declare function useMounted(): import("react").MutableRefObject<boolean>;
